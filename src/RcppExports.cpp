// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_derive_avoidable_att
std::vector<bool> cpp_derive_avoidable_att(const DataFrame& df, const std::string& colTypeED, const std::string& colAttDischarge, const std::string& colAttCategory, const std::string& colArrivalMode, const std::vector<std::string>& colsInvestigations, const std::vector<std::string>& colsTreatments, std::string clinicalCodeStandard, int nthreads);
RcppExport SEXP _ESAAvoidableAtt_cpp_derive_avoidable_att(SEXP dfSEXP, SEXP colTypeEDSEXP, SEXP colAttDischargeSEXP, SEXP colAttCategorySEXP, SEXP colArrivalModeSEXP, SEXP colsInvestigationsSEXP, SEXP colsTreatmentsSEXP, SEXP clinicalCodeStandardSEXP, SEXP nthreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DataFrame& >::type df(dfSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type colTypeED(colTypeEDSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type colAttDischarge(colAttDischargeSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type colAttCategory(colAttCategorySEXP);
    Rcpp::traits::input_parameter< const std::string& >::type colArrivalMode(colArrivalModeSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type colsInvestigations(colsInvestigationsSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type colsTreatments(colsTreatmentsSEXP);
    Rcpp::traits::input_parameter< std::string >::type clinicalCodeStandard(clinicalCodeStandardSEXP);
    Rcpp::traits::input_parameter< int >::type nthreads(nthreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_derive_avoidable_att(df, colTypeED, colAttDischarge, colAttCategory, colArrivalMode, colsInvestigations, colsTreatments, clinicalCodeStandard, nthreads));
    return rcpp_result_gen;
END_RCPP
}
// cpp_get_max_threads
int cpp_get_max_threads();
RcppExport SEXP _ESAAvoidableAtt_cpp_get_max_threads() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(cpp_get_max_threads());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ESAAvoidableAtt_cpp_derive_avoidable_att", (DL_FUNC) &_ESAAvoidableAtt_cpp_derive_avoidable_att, 9},
    {"_ESAAvoidableAtt_cpp_get_max_threads", (DL_FUNC) &_ESAAvoidableAtt_cpp_get_max_threads, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_ESAAvoidableAtt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
